
# 📚 Library Management System

A robust **Java-based desktop application** designed to simplify and automate the daily operations of a library. The system allows librarians and administrators to manage books, users, and loan records efficiently through an intuitive graphical interface.

---

## ✨ Key Features

- 📖 **Book Management**: Add, edit, delete, and search for books.
- 👤 **User Management**: Manage user accounts with role-based access (admin, staff).
- 🔁 **Loan Management**: Track borrowed and returned books with due dates.
- 🔐 **Authentication**: Secure login system with role-based permissions.
- 💾 **CSV Data Storage**: Lightweight data persistence using CSV files.
- 🧪 **Unit Tested**: Includes JUnit tests for controller logic.

---

## 🧰 Tech Stack

| Technology | Purpose               |
|------------|------------------------|
| Java       | Core application logic |
| Swing      | Graphical User Interface (GUI) |
| Maven      | Project build & dependency management |
| JUnit      | Unit testing |
| CSV Files  | Lightweight data storage |

---

## 📂 Project Structure

```
LibraryManagementSystem/
├── pom.xml
├── README.md
├── src/
│   ├── main/
│   │   ├── java/com/library/
│   │   │   ├── Main.java
│   │   │   ├── model/             # Book, User, Loan, UserRole, etc.
│   │   │   ├── controller/        # LibraryController.java
│   │   │   ├── view/              # GUI components (LoginFrame, MainFrame)
│   │   │   ├── dao/               # CSVHandler.java
│   │   │   └── database/          # Book.csv, Loan.csv, User.csv
│   └── test/java/com/library/
│       └── controller/LibraryControllerTest.java
└── target/                        # Compiled classes and JAR (generated by Maven)
```

---

## 🚀 Getting Started

### ✅ Prerequisites

- Java Development Kit (**JDK 11** or higher)
- **Apache Maven** installed and configured

### 🛠️ Installation & Run

1. **Clone the repository**
   ```bash
   git clone https://github.com/your-username/LibraryManagementSystem.git
   cd LibraryManagementSystem
   ```

2. **Build the project**
   ```bash
   mvn clean install
   ```

3. **Run the application**
   ```bash
   mvn exec:java -Dexec.mainClass="com.library.Main"
   ```

The application will launch with a login window.

---

## 🔐 Default Login Credentials

| Email               | Password   | Role      |
|--------------------|------------|-----------|
| admin@library.com  | admin123   | Admin     |

---

## 🧪 Running Tests

To run the unit tests:

```bash
mvn test
```

JUnit will execute the tests defined in `LibraryControllerTest.java`.

---

## 💡 Future Enhancements

- 💽 Database integration (MySQL/PostgreSQL)
- 🌐 Web-based interface (Spring Boot + React)
- 📈 Dashboard for analytics
- 📬 Email notifications for overdue books

---

## 🤝 Contributing

Contributions are welcome!

1. Fork the repository
2. Create a new branch:  
   `git checkout -b feature/your-feature-name`
3. Make your changes and commit
4. Push to your forked repo:  
   `git push origin feature/your-feature-name`
5. Open a Pull Request

Please follow the project's coding conventions and include tests when applicable.

---

## 📬 Contact

For questions or suggestions, feel free to reach out:

- GitHub: [@mzerroug](https://github.com/mzerroug)
- Email: zerrougmaha02@gmail.com

--- 

📄 License
This project is licensed under the MIT License.
See the LICENSE file for more information.

---

> Designed with care to make library operations smarter and more efficient. 📚✨
```
